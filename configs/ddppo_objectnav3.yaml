BASE_TASK_CONFIG_PATH: "configs/objectnav_mp3d.yaml"
TRAINER_NAME: "custom_ddppo"
ENV_NAME: "CustomObjectNavRLEnv"
SIMULATOR_GPU_ID: 6
TORCH_GPU_ID: 6
VIDEO_OPTION: ["disk", "tensorboard"]
TENSORBOARD_DIR: "logs/obj_c"
VIDEO_DIR: "videos/obj_c"
TEST_EPISODE_COUNT: 2184
EVAL_CKPT_PATH_DIR: "checkpoints-c"
NUM_PROCESSES: 4
SENSORS: ["DEPTH_SENSOR", "RGB_SENSOR"]
CHECKPOINT_FOLDER: "checkpoints-c"
NUM_UPDATES: 100000000
LOG_INTERVAL: 10
CHECKPOINT_INTERVAL: 200
VIS_INTERVAL: 200
RL:
  SUCCESS_REWARD: 5.0
  SLACK_REWARD: 0.001
  PPO:
    # ppo params
    clip_param: 0.2
    ppo_epoch: 4
    num_mini_batch: 2
    value_loss_coef: 0.5
    entropy_coef: 0.01
    lr: 2.5e-4
    eps: 1e-5
    max_grad_norm: 0.2
    num_steps: 64
    use_gae: True
    gamma: 0.99
    tau: 0.95
    use_linear_clip_decay: False
    use_linear_lr_decay: False
    reward_window_size: 50

    use_normalized_advantage: False

    hidden_size: 512

  DDPPO:
    sync_frac: 0.6
    # The PyTorch distributed backend to use
    distrib_backend: NCCL
    # Visual encoder backbone
    pretrained_weights: data/new_checkpoints/ckpt.42.pth
    # Initialize with pretrained weights
    pretrained: False
    # Initialize just the visual encoder backbone with pretrained weights
    pretrained_encoder: False
    # Whether or not the visual encoder backbone will be trained.
    train_encoder: True
    # Whether or not to reset the critic linear layer
    reset_critic: False

    # Model parameters
    backbone: resnet50
    rnn_type: LSTM
    num_recurrent_layers: 2
